// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	entity "dev/lamoda_test/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStocker is a mock of Stocker interface.
type MockStocker struct {
	ctrl     *gomock.Controller
	recorder *MockStockerMockRecorder
}

// MockStockerMockRecorder is the mock recorder for MockStocker.
type MockStockerMockRecorder struct {
	mock *MockStocker
}

// NewMockStocker creates a new mock instance.
func NewMockStocker(ctrl *gomock.Controller) *MockStocker {
	mock := &MockStocker{ctrl: ctrl}
	mock.recorder = &MockStockerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStocker) EXPECT() *MockStockerMockRecorder {
	return m.recorder
}

// GetAmount mocks base method.
func (m *MockStocker) GetAmount(stock int) ([]entity.Products, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAmount", stock)
	ret0, _ := ret[0].([]entity.Products)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAmount indicates an expected call of GetAmount.
func (mr *MockStockerMockRecorder) GetAmount(stock interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAmount", reflect.TypeOf((*MockStocker)(nil).GetAmount), stock)
}

// Reserve mocks base method.
func (m *MockStocker) Reserve(products entity.Ids) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Reserve", products)
	ret0, _ := ret[0].(error)
	return ret0
}

// Reserve indicates an expected call of Reserve.
func (mr *MockStockerMockRecorder) Reserve(products interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Reserve", reflect.TypeOf((*MockStocker)(nil).Reserve), products)
}

// ReserveRelease mocks base method.
func (m *MockStocker) ReserveRelease(products entity.Ids) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReserveRelease", products)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReserveRelease indicates an expected call of ReserveRelease.
func (mr *MockStockerMockRecorder) ReserveRelease(products interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReserveRelease", reflect.TypeOf((*MockStocker)(nil).ReserveRelease), products)
}
